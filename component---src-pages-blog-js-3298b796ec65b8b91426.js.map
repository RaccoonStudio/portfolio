{"version":3,"sources":["webpack:///./src/components/BlogPostAbstract/BlogPostAbstract.js","webpack:///./src/components/BlogPostAbstract/index.js","webpack:///./src/components/Button/Button.js","webpack:///./src/components/Button/index.js","webpack:///./src/pages/blog.js","webpack:///./src/components/PageTitle/PageTitle.js","webpack:///./src/components/PageTitle/index.js","webpack:///./node_modules/core-js/modules/es6.string.small.js"],"names":["StyledArticle","styled","article","SizingSystem","values","wide","media","laptop","wider","StyledTitleLink","Link","StyledTitle","h2","TypographySystem","stack","titleStack","StyledExcerpt","p","StyledTime","time","weights","light","demi","default","StyledReadMore","double","BlogPostAbstract","post","postInfo","frontmatter","postExcerpt","excerpt","to","path","title","date","StyledButton","button","AccessibilityHelpers","outline","base","small","medium","ColorSystem","brand","raccoon","generic","white","Button","props","markup","href","as","children","defaultProps","StyledMediumLink","StyledHeader","header","extraLarge","pageQuery","BlogPage","Posts","data","allMarkdownRemark","edges","map","edge","key","node","id","narrowContent","PageTitle","StyledPageTitle","h1","thin","desktop","hairstyle","createHTML","this"],"mappings":"gLAOMA,EAAgBC,IAAOC,QAAV,sFAAGD,CAAH,sIACAE,IAAaC,OAAOC,KAGhBF,IAAaG,MAAMC,OACvBJ,IAAaC,OAAOI,MAIjBL,IAAaC,OAAOI,OAKpCC,EAAkBR,YAAOS,KAAV,wFAAGT,CAAH,MAEfU,EAAcV,IAAOW,GAAV,oFAAGX,CAAH,mDAEAY,IAAiBC,MAAMC,YAIlCC,EAAgBf,IAAOgB,EAAV,sFAAGhB,CAAH,MAEbiB,EAAajB,IAAOkB,KAAV,mFAAGlB,CAAH,wGAECY,IAAiBO,QAAQC,MAI1BlB,IAAaC,OAAOkB,KAEjBT,IAAiBO,QAAQG,SAItCC,EAAiBvB,YAAOS,KAAV,uFAAGT,CAAH,4MAGNE,IAAaC,OAAOkB,KACfnB,IAAaC,OAAOkB,KAC1BnB,IAAaC,OAAOkB,KAEZnB,IAAaC,OAAOqB,OACrBtB,IAAaC,OAAOqB,QCjDzBC,EDuDU,SAAAC,GACvB,IAAMC,EAAWD,EAAKA,KAAKE,YACrBC,EAAcH,EAAKA,KAAKI,QAE9B,OACE,kBAAC/B,EAAD,KACE,kBAACW,EAAD,KACE,kBAACF,EAAD,CAAiBuB,GAAIJ,EAASK,MAAOL,EAASM,QAEhD,kBAAChB,EAAD,KAAaU,EAASO,MACtB,kBAACnB,EAAD,KAAgBc,GAChB,kBAACN,EAAD,CAAgBQ,GAAIJ,EAASK,MAA7B,oBAAwDL,EAASM,S,SE9DjEE,G,aAAenC,IAAOoC,OAAV,2EAAGpC,CAAH,wcACdqC,IAAqBC,QAKZpC,IAAaC,OAAOoC,KAAQrC,IAAaC,OAAOqC,MAAStC,IAAaC,OAAOoC,KACpFrC,IAAaC,OAAOsC,OAEdvC,IAAaC,OAAOqB,OACrBkB,IAAYC,MAAMC,QAMLF,IAAYC,MAAMC,QAC7BF,IAAYG,QAAQC,MASnB5C,IAAaC,OAAOsC,OACfvC,IAAaC,OAAOkB,KAC1BnB,IAAaC,OAAOsC,SAM3BM,EAAS,SAAAC,GACb,IAAMC,EAASD,EAAME,KAAN,aAEf,OACE,kBAACf,EAAD,eAAcgB,GAAIF,GAAYD,GAC3BA,EAAMI,WAiBbL,EAAOM,aAAe,CACpBH,KAAM,IAGOH,IChEAA,EDgEAA,E,0CEvDf,IAAMO,EAAmBtD,YAAO+C,GAAV,6EAAG/C,CAAH,uBACHE,IAAaC,OAAOI,OAGjCgD,EAAevD,IAAOwD,OAAV,yEAAGxD,CAAH,6EACNE,IAAaC,OAAOsD,WAETvD,IAAaG,MAAMC,QA2B7BoD,GAFEC,UAnBE,SAAC,GAIX,IACCC,EADF,EAHJC,KACEC,kBAAqBC,MAGHC,KAAI,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAAkBC,IAAKD,EAAKE,KAAKC,GAAI1C,KAAMuC,EAAKE,UAEhF,OACE,kBAAC,IAAD,CAAQE,eAAa,GACnB,kBAAC,IAAD,CAAKpC,MAAM,SACX,kBAACsB,EAAD,KACE,kBAACe,EAAA,EAAD,cAEDV,EACD,kBAACN,EAAD,CAAkBJ,KAAK,iCAAvB,oCAOgB,e,sECvChBqB,EAAkBvE,IAAOwE,GAAV,6EAAGxE,CAAH,4LAGJY,IAAiBO,QAAQC,MAEnBlB,IAAaG,MAAMC,OAEvBM,IAAiBO,QAAQsD,KAIrBvE,IAAaG,MAAMqE,QAEvB9D,IAAiBO,QAAQwD,WAItCL,EAAY,SAAAtB,GAAK,OAAI,kBAACuB,EAAoBvB,EAAQA,EAAMI,WAS9DkB,EAAUjB,aAAe,GAEViB,QChCAA,O,iCCAf,EAAQ,IAAR,CAA0B,SAAS,SAAUM,GAC3C,OAAO,WACL,OAAOA,EAAWC,KAAM,QAAS,GAAI","file":"component---src-pages-blog-js-3298b796ec65b8b91426.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nimport { SizingSystem, TypographySystem } from '../core';\n\nconst StyledArticle = styled.article`\n  margin-bottom: ${SizingSystem.values.wide};\n  max-width: 64rem;\n\n  @media (min-width: ${SizingSystem.media.laptop}) {\n    margin-left: ${SizingSystem.values.wider};\n\n    &:nth-of-type(even) {\n      margin-left: auto;\n      margin-right: ${SizingSystem.values.wider};\n    }\n  }\n`;\n\nconst StyledTitleLink = styled(Link)``;\n\nconst StyledTitle = styled.h2`\n  margin-top: 0;\n  font-family: ${TypographySystem.stack.titleStack};\n  font-size: 3.2rem;\n`;\n\nconst StyledExcerpt = styled.p``;\n\nconst StyledTime = styled.time`\n  float: left;\n  font-weight: ${TypographySystem.weights.light};\n\n  &::after {\n    display: inline-block;\n    margin: 0 ${SizingSystem.values.demi};\n    content: 'â€¢';\n    font-weight: ${TypographySystem.weights.default};\n  }\n`;\n\nconst StyledReadMore = styled(Link)`\n  &::after {\n    display: inline-block;\n    height: ${SizingSystem.values.demi};\n    margin-left: ${SizingSystem.values.demi};\n    width: ${SizingSystem.values.demi};\n    content: '';\n    border-bottom: ${SizingSystem.values.double} solid currentColor;\n    border-right: ${SizingSystem.values.double} solid currentColor;\n    transform: rotate(-45deg);\n    vertical-align: middle;\n  }\n`;\n\nconst BlogPostAbstract = post => {\n  const postInfo = post.post.frontmatter;\n  const postExcerpt = post.post.excerpt;\n\n  return (\n    <StyledArticle>\n      <StyledTitle>\n        <StyledTitleLink to={postInfo.path}>{postInfo.title}</StyledTitleLink>\n      </StyledTitle>\n      <StyledTime>{postInfo.date}</StyledTime>\n      <StyledExcerpt>{postExcerpt}</StyledExcerpt>\n      <StyledReadMore to={postInfo.path}>{`Continue reading ${postInfo.title}`}</StyledReadMore>\n    </StyledArticle>\n  );\n};\n\nBlogPostAbstract.propTypes = {\n  /**\n   * Specify the information about the post being displayed\n   */\n  post: PropTypes.object.isRequired,\n};\n\nexport default BlogPostAbstract;\n","import BlogPostAbstract from './BlogPostAbstract';\n\nexport default BlogPostAbstract;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport { AccessibilityHelpers, ColorSystem, SizingSystem } from '../core';\n\nconst StyledButton = styled.button`\n  ${AccessibilityHelpers.outline}\n  display: inline-flex;\n  align-content: center;\n  align-self: center;\n  margin-top: auto;\n  padding: ${SizingSystem.values.base} ${SizingSystem.values.small} ${SizingSystem.values.base}\n    ${SizingSystem.values.medium};\n  background-color: transparent;\n  border: ${SizingSystem.values.double} solid currentColor;\n  color: ${ColorSystem.brand.raccoon};\n  text-decoration: none;\n  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;\n\n  &:focus,\n  &:hover {\n    background-color: ${ColorSystem.brand.raccoon};\n    color: ${ColorSystem.generic.white};\n\n    & > svg {\n      fill: currentColor;\n    }\n  }\n\n  & > svg {\n    align-self: center;\n    height: ${SizingSystem.values.medium};\n    margin-left: ${SizingSystem.values.demi};\n    width: ${SizingSystem.values.medium};\n    fill: currentColor;\n    transition: fill 0.2s ease-in-out;\n  }\n`;\n\nconst Button = props => {\n  const markup = props.href ? `a` : `button`;\n\n  return (\n    <StyledButton as={markup} {...props}>\n      {props.children}\n    </StyledButton>\n  );\n};\n\nButton.propTypes = {\n  /**\n   * Specify the content of the button\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Specify the target of the button, and transform it as a link\n   */\n  href: PropTypes.string,\n};\n\nButton.defaultProps = {\n  href: '',\n};\n\nexport default Button;\n","import Button from './Button';\n\nexport default Button;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport BlogPostAbstract from '../components/BlogPostAbstract';\nimport PageTitle from '../components/PageTitle';\nimport Button from '../components/Button';\nimport { SizingSystem } from '../components/core';\n\nconst StyledMediumLink = styled(Button)`\n  margin-bottom: ${SizingSystem.values.wider};\n`;\n\nconst StyledHeader = styled.header`\n  margin: ${SizingSystem.values.extraLarge} 0;\n\n  @media (min-width: ${SizingSystem.media.laptop}) {\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nconst BlogPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const Posts = edges.map(edge => <BlogPostAbstract key={edge.node.id} post={edge.node} />);\n\n  return (\n    <Layout narrowContent>\n      <SEO title=\"Blog\" />\n      <StyledHeader>\n        <PageTitle>Blog</PageTitle>\n      </StyledHeader>\n      {Posts}\n      <StyledMediumLink href=\"https://medium.com/@iamhiwelo\">Discover older posts on Medium</StyledMediumLink>\n    </Layout>\n  );\n};\n\nexport default BlogPage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { published: { ne: false } } }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"dddd D MMMM YYYY\")\n            path\n            title\n            published\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport { SizingSystem, TypographySystem } from '../core';\n\nconst StyledPageTitle = styled.h1`\n  margin-bottom: 0.3em;\n  font-size: 3.2rem;\n  font-weight: ${TypographySystem.weights.light};\n\n  @media (min-width: ${SizingSystem.media.laptop}) {\n    font-size: 4rem;\n    font-weight: ${TypographySystem.weights.thin};\n    text-align: center;\n  }\n\n  @media (min-width: ${SizingSystem.media.desktop}) {\n    font-size: 4.8rem;\n    font-weight: ${TypographySystem.weights.hairstyle};\n  }\n`;\n\nconst PageTitle = props => <StyledPageTitle {...props}>{props.children}</StyledPageTitle>;\n\nPageTitle.propTypes = {\n  /**\n   * Specify the content of the title\n   */\n  children: PropTypes.node.isRequired,\n};\n\nPageTitle.defaultProps = {};\n\nexport default PageTitle;\n","import PageTitle from './PageTitle';\n\nexport default PageTitle;\n","'use strict';\n// B.2.3.11 String.prototype.small()\nrequire('./_string-html')('small', function (createHTML) {\n  return function small() {\n    return createHTML(this, 'small', '', '');\n  };\n});\n"],"sourceRoot":""}